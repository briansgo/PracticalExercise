@model IEnumerable<Student>
@{
    Layout = null;
}
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://apps.elfsight.com/p/platform.js" defer></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.0/chart.min.js"
            integrity="sha512-asxKqQghC1oBShyhiBwA+YgotaSYKxGP1rcSYTDrB0U6DxwlJjU59B67U8+5/++uFjcuVM8Hh5cokLjZlhm3Vg=="
            crossorigin="anonymous"
            referrerpolicy="no-referrer">
    </script>
</head>

<body style="background-color: #4d4f52; ">

    <br />

    <div class="container-fluid">
        <div class="row">

            <!--Clima-->
            <div class="col-3">
                <div class="elfsight-app-46ee19d8-4ef0-4c9f-b3e2-53fea9ec5ceb"></div>
            </div>

            <!--Subir archivo-->
            <div class="col-3">
                <div class="card">
                    <div class="card-header">Selecciona un archivo de Excel</div>
                    <div class="card-body">
                        <div class="input-group mb-3">
                            <div class="custom-file">
                                <form asp-controller="Students" asp-action="Index" method="post" enctype="multipart/form-data">
                                    <input type="file" class="custom-file-input" name="file">
                                    <button type="submit" class="btn btn-primary">Mostrar tabla</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.Count() > 0)
            {
                <!-- MEJOR Y PEOR CALIFICACIÓN Y PROMEDIOS-->
                <div class="col-6">
                    <div class="card">

                        <div class="card-header">
                            <div class="row">
                                <div class="col-6">Información adicional</div>
                                <div class="col-6">
                                    <button class="btn btn-primary float-right" onclick="promedios()">Calcular</button>
                                </div>
                            </div>
                        </div>

                        <div class="card-body">
                            <div class="row">

                                <!--PROMEDIO GRUPAL-->
                                <div class="col-4">
                                    <div class="card">
                                        <div class="card-header">Promedio Grupal</div>
                                        <div class="card-body"><h5 id="groupAvg"></h5></div>
                                    </div>
                                </div>


                                <!--MEJOR CALIFICACION-->
                                <div class="col-4">
                                    <div class="card">
                                        <div class="card-header">Mejor Calificación</div>
                                        <div class="card-body">

                                            <table class="table" cellpaddong="0" cellspacing="0" border="1">
                                                <tr>
                                                    <td>Nombre</td>
                                                    <td>Calificación</td>
                                                </tr>
                                                <tr>
                                                    <td><p id="beststudent"></p></td>
                                                    <td><p id="bestgrade"></p></td>
                                                </tr>
                                            </table>

                                        </div>
                                    </div>

                                </div>

                                <!--PEOR CALIFICACION-->
                                <div class="col-4">
                                    <div class="card">
                                        <div class="card-header">Peor Calificación</div>
                                        <div class="card-body">

                                            <table class="table" cellpaddong="0" cellspacing="0" border="1">
                                                <tr>
                                                    <td>Nombre</td>
                                                    <td>Calificación</td>
                                                </tr>
                                                <tr>
                                                    <td><p id="worststudent"></p></td>
                                                    <td><p id="worstgrade"></p></td>
                                                </tr>
                                            </table>

                                        </div>
                                    </div>
                                </div>

                            </div>

                        </div>

                    </div>
                </div>
            }
        </div>
    </div>

    <br />

   @if (Model.Count() > 0)
    {
        
        <div class="container-fluid">

            <div class="row">

                <!--dibuja tabla-->
                <div class="col-6">
                    <div class="card">
                        <div class="card-header">Tabla</div>
                        <div class="card-body">

                            <table id="myTable" class="table" cellpaddong="0" cellspacing="0" border="1">

                                @foreach (Student student in Model)
                                {
                                    <tr>
                                        <td>@student.Nombres</td>
                                        <td>@student.ApellidoPaterno</td>
                                        <td>@student.ApellidoMaterno</td>
                                        <td>@student.FechaNacimiento</td>
                                        <td>@student.Grado</td>
                                        <td>@student.Grupo</td>
                                        <td>@student.Calificacion</td>
                                        <td id="clavexd">@student.Clave</td>
                                    </tr>
                                }
                            </table>

                            <div class="float-right">
                                <label for="steps">Girar clave a la izquierda: </label>
                                <input type="number" id="despizq" name="steps" step="1">
                                <button class="btn btn-secondary" type="submit" onclick="updateTable()">Girar</button>
                            </div>
                            
                        </div>
                    </div>
                </div>

                <!-- GRÁFICA -->
                <div class="col-6">
                    <div class="card">
                        <div class="card-header">
                            <div class="row">
                                <div class="col-6">Gráfica</div>
                                <div class="col-6">
                                    <button class="btn btn-primary float-right" onclick="loadChart()">Mostrar gráfica</button>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <canvas class="my-4" id="bar"></canvas>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <br />
            </div>
        </div>

    }

</body>

</html>


<script type="text/javascript">

    // checar cada calificacion y almacenar la mayor junto con el nombre del alumno
    // hacer lo mismo con la calificación menor
    // guardar todas las calificaciones en un array para calcular el promedio

    var alums;
    var califs;

    function promedios() {

        readTable()

        let sum = 0.0;
        let c = 0;
        let promedio;
        let cal
        let mejorcalif = 0
        let mejoralumno
        let peorcalif = 10
        let peoralumno

        for (var i in califs) {
            cal = parseFloat(califs[i]);
            sum += cal
            c++;

            if (cal > mejorcalif) {
                mejorcalif = cal;
                mejoralumno = alums[i]
            }
            if (cal < peorcalif) {
                peorcalif = cal;
                peoralumno = alums[i]
            }

            console.log(sum);
        }

        promedio = sum/c;
        document.getElementById('groupAvg').innerHTML = promedio;
        document.getElementById('beststudent').innerHTML = mejoralumno;
        document.getElementById('bestgrade').innerHTML = mejorcalif;
        document.getElementById('worststudent').innerHTML = peoralumno;
        document.getElementById('worstgrade').innerHTML = peorcalif;


    }

    function loadChart() {

        readTable()

        let xlabels = alums
        let xvalues = califs

        let barchart = document.getElementById('bar').getContext('2d');
        new Chart(barchart, {
            type: 'bar',
            data: {
                labels: xlabels,
                datasets: [{
                    label: 'Gráfica de calificaciones',
                    data: xvalues,
                    backgroundColor: 'rgba(0,150,180)'
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        })
    }

    function readTable() {

        var nombres = [];
        var calificaciones = [];

        //gets table
        var myTable = document.getElementById('myTable');

        //gets rows of table
        var rowLength = myTable.rows.length;

        //loops through rows
        for (i = 1; i < rowLength; i++) {

            //gets cells of current row
            var rowCells = myTable.rows.item(i).cells;

            nombres.push(rowCells.item(0).innerHTML + " " + rowCells.item(1).innerHTML);
            calificaciones.push(parseFloat(rowCells.item(6).innerHTML));
        }

        alums = nombres
        califs = calificaciones
    }

    function updateTable() {

        var oldID
        var newID
        let steps = parseInt(document.getElementById('despizq').value);

        //gets table
        var myTable = document.getElementById('myTable');

        //gets rows of table
        var numofrows = myTable.rows.length;

        //loops through rows
        for (i = 1; i < numofrows; i++) {

            //gets cells of current row
            var rowCells = myTable.rows.item(i).cells;

            oldID = rowCells.item(7).innerHTML
            newID = rotateID(oldID, steps)
            rowCells.item(7).innerHTML = newID
        }

    }

    function rotateID(prevID, steps) {

        let aux
        let newID

        if (steps > 0) {
            for (let i = 0; i < steps; i++) {
                aux = prevID.substring(0, 1)
                newID = prevID.substring(1) + aux
                prevID = newID
            }
            return newID
        }
        else {
            return prevID
        }
    }

</script>


